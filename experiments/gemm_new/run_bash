cgra-opt \
--extract-affine-for-to-kernel \
0_gemm.mlir > 1_gemm_kernel.mlir

cgra-opt \
    --affine-loop-fusion \
    --affine-loop-invariant-code-motion \
    --affine-loop-tile="tile-size=2 " \
    --affine-loop-unroll="unroll-factor=2" \
    1_gemm_kernel.mlir > 2_gemm_optimized.mlir

# Stripmined
cgra-opt \
    --adjust-kernel-mem-footprint="cachesize=6 singlearraysize=6" \
    2_gemm_optimized.mlir > 3_gemm_stripmined.mlir

cgra-opt \
    --extract-kernel-to-function="kernel-explicit-datablock-trans"\
    3_gemm_stripmined.mlir > 4_gemm_outlined.mlir

cgra-opt \
    --fdra-extract-kernel-to-function='kernel-gen-dir=/home/tianyi/MLIRCGRA/CGRA-Flow/mlir-cgra/experiments/LJHtest/gemm_new kernel-explicit-datablock-trans=false'\
    1_gemm_kernel.mlir > 2_gemm_outlined.mlir

cgra-opt \
--fdra-extract-kernel-to-function=\
kernel-gen-dir=/home/tianyi/MLIRCGRA/CGRA-Flow/mlir-cgra/experiments/LJHtest/gemm_new \
3_gemm_stripmined.mlir > 4_gemm_host.mlir


cgra-opt --adjust-kernel-mem-footprint="cachesize=6 singlearraysize=6" 1_gemm_kernel.mlir 

cgra-opt --affine-loop-tile="cache-size=1 singlearraysize=1"   0_gemm_change.mlir 
cgra-opt  --fdra-auto-dse  0_gemm_change.mlir 

# for kernels
cgra-opt --affine-loop-tile="cache-size=1 singlearraysize=1"   0_gemm_change.mlir 


# kernel
cgra-opt --arith-expand --memref-expand\
        -lower-affine --scf-for-loop-canonicalization  -convert-scf-to-cf\
        -convert-memref-to-llvm  --convert-math-to-llvm --convert-math-to-libm\
        --convert-arith-to-llvm\
        --affine-simplify-structures\
        -convert-func-to-llvm=use-bare-ptr-memref-call-conv\
        -reconcile-unrealized-casts \
        gemm_kernel_0.mlir -o gemm_kernel_0_llvm.mlir


mlir-translate  --mlir-to-llvmir gemm_kernel_0_llvm.mlir > gemm_kernel_0.ll

opt -gvn -mem2reg -memdep -memcpyopt -lcssa -loop-simplify\
         -licm -loop-deletion -indvars -simplifycfg\
         -mergereturn -indvars \
         gemm_kernel_0.ll -S -o gemm_kernel_gvn_0.ll

opt -load /home/tianyi/new_fdra/fdra/app-compiler/build/llvm-pass/libCDFGPass.so\
         "-mapping-all=true" -cdfg\
         gemm_kernel_gvn_0.ll -S -o gemm_kernel_cdfg_0.ll \
         -enable-new-pm=0

# mapping
dot -Tdot_json affine.dot -o gemm_kernel_0.json
cgra-compiler SPDLOG_LEVEL=off \
  -c true -m true -o true -t 3600000 -i 2000 \
  -p "/home/tianyi/new_fdra/fdra/cgra-mg/src/main/resources/operations.json" \
  -a "/home/tianyi/new_fdra/fdra/cgra-mg/src/main/resources/cgra_adg.json" \
  -d "/home/tianyi/MLIRCGRA/CGRA-Flow/mlir-cgra/experiments/LJHtest/gemm_new/kernels/gemm_kernel_0.json"


# host: mlir to llvm.ir
cgra-opt --arith-expand --memref-expand\
 --affine-simplify-structures \
 -lower-affine --scf-for-loop-canonicalization  -convert-scf-to-cf\
 -convert-memref-to-llvm  --convert-math-to-llvm --convert-math-to-libm\
 --convert-arith-to-llvm \
 -convert-func-to-llvm=use-bare-ptr-memref-call-conv\
 3_gemm_onlyhost.mlir -o 4_gemm_host_llvm.mlir 

mlir-translate  --mlir-to-llvmir 3_gemm_outlined_funcall_llvm.mlir  > gemm_outlined_funcall.ll

# riscv tool chain