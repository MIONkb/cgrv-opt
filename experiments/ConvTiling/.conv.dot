digraph "CFG for 'conv' function" {
	label="CFG for 'conv' function";

	Node0x55fd136dc870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  br label %for.cond1.preheader\l}"];
	Node0x55fd136dc870 -> Node0x55fd136dc9d0;
	Node0x55fd136dc9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond1.preheader:                              \l  %b.045 = phi i32 [ 0, %entry ], [ %inc31, %for.cond.cleanup3 ]\l  %mul10 = mul nuw nsw i32 %b.045, 150528\l  %add.ptr = getelementptr inbounds [224 x [224 x [3 x i32]]], ptr @input, i32\l... %mul10\l  %mul21 = mul nuw nsw i32 %b.045, 1577088\l  %add.ptr22 = getelementptr inbounds [222 x [222 x [32 x i32]]], ptr @output,\l... i32 %mul21\l  br label %for.cond5.preheader\l}"];
	Node0x55fd136dc9d0 -> Node0x55fd136dcfa0;
	Node0x55fd136dd110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  ret void\l}"];
	Node0x55fd136dcfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond5.preheader:                              \l  %och.044 = phi i32 [ 0, %for.cond1.preheader ], [ %inc, %for.cond.cleanup7 ]\l  %mul16 = mul nuw nsw i32 %och.044, 27\l  %add.ptr17 = getelementptr inbounds [3 x [3 x [3 x i32]]], ptr @weights, i32\l... %mul16\l  %add.ptr18 = getelementptr inbounds i32, ptr @bias, i32 %och.044\l  %add.ptr2546 = getelementptr inbounds [222 x [222 x [32 x i32]]], ptr\l... %add.ptr22, i32 %och.044\l  br label %for.body8\l}"];
	Node0x55fd136dcfa0 -> Node0x55fd136dd8a0;
	Node0x55fd136dcb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup3:                                \l  %inc31 = add nuw nsw i32 %b.045, 1\l  %exitcond47.not = icmp eq i32 %inc31, 4\l  br i1 %exitcond47.not, label %for.cond.cleanup, label %for.cond1.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x55fd136dcb40:s0 -> Node0x55fd136dd110;
	Node0x55fd136dcb40:s1 -> Node0x55fd136dc9d0;
	Node0x55fd136dd290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup7:                                \l  %inc = add nuw nsw i32 %och.044, 1\l  %exitcond.not = icmp eq i32 %inc, 32\l  br i1 %exitcond.not, label %for.cond.cleanup3, label %for.cond5.preheader,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55fd136dd290:s0 -> Node0x55fd136dcb40;
	Node0x55fd136dd290:s1 -> Node0x55fd136dcfa0;
	Node0x55fd136dd8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body8:                                        \l  %orow_out.043 = phi i32 [ 0, %for.cond5.preheader ], [ %add, %for.body8 ]\l  %mul12 = mul nuw nsw i32 %orow_out.043, 672\l  %add.ptr13 = getelementptr inbounds [224 x [224 x [3 x i32]]], ptr %add.ptr,\l... i32 %mul12\l  %mul24 = mul nuw nsw i32 %orow_out.043, 7104\l  %add.ptr27 = getelementptr inbounds [222 x [222 x [32 x i32]]], ptr\l... %add.ptr2546, i32 %mul24\l  tail call void @conv_kernel(ptr noundef nonnull %add.ptr13, ptr noundef\l... nonnull %add.ptr17, ptr noundef nonnull %add.ptr18, ptr noundef nonnull\l... %add.ptr27)\l  %add = add nuw nsw i32 %orow_out.043, 3\l  %cmp6 = icmp ult i32 %orow_out.043, 219\l  br i1 %cmp6, label %for.body8, label %for.cond.cleanup7, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55fd136dd8a0:s0 -> Node0x55fd136dd8a0;
	Node0x55fd136dd8a0:s1 -> Node0x55fd136dd290;
}
