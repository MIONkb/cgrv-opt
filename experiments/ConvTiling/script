rootfolder=$(pwd)
filename=myconv
func=conv

########
#### cgiest c/c++->mlir
########
cgeist "$filename".c -function=$func\
        --inbounds-gep  -S -O2 -memref-fullrank -raise-scf-to-affine \
        > 0_"$filename".mlir




########
#### get memory optimized kernel
########
cgra-opt  --fdra-extract-affine-for-to-kernel  0_"$filename".mlir > 1_kernel.mlir
cgra-opt  --fdra-adjust-kernel-mem-footprint="cachesize=256 singlearraysize=16" \
        1_kernel.mlir > 2_kernel_mem_opt.mlir
cgra-opt --affine-loop-fusion  --arith-expand --memref-expand -reconcile-unrealized-casts \
 --fdra-extract-kernel-to-function="kernel-gen-dir=$rootfolder kernel-explicit-datablock-trans=true" \
 2_kernel_mem_opt.mlir > 3_host.mlir

########
#### get kernel llvm
########
cd ./kernels
## unroll
# --affine-loop-unroll                              -   Unroll affine loops
#         --cleanup-unroll                                - Fully unroll the cleanup loop when possible.
#         --unroll-factor=<uint>                          - Use this unroll factor for all loops being unrolled
#         --unroll-full                                   - Fully unroll loops
#         --unroll-full-threshold=<uint>                  - Unroll all loops with trip count less than or equal to this
#         --unroll-num-reps=<uint>                        - Unroll innermost loops repeatedly this many times
#         --unroll-up-to-factor                           - Allow unrolling up to the factor specified
cgra-opt --affine-loop-unroll="unroll-num-reps=3"  conv_kernel_0.mlir
cgra-opt \
 --affine-loop-unroll="unroll-full"\
 --affine-loop-unroll="unroll-full"\
 --affine-loop-unroll="unroll-full"\
 --affine-loop-normalize \
 --affine-simplify-structures \
 --canonicalize\
 conv_kernel_0.mlir -o 0_unrolled.mlir\
 --mlir-print-ir-after-all 2>&1 | cat > 0_intermediate_before_unroll.mlir

cgra-opt --arith-expand --memref-expand\
        -lower-affine --scf-for-loop-canonicalization  -convert-scf-to-cf\
        -convert-memref-to-llvm  --convert-math-to-llvm --convert-math-to-libm\
        --convert-arith-to-llvm\
        --affine-simplify-structures\
        -convert-func-to-llvm=use-bare-ptr-memref-call-conv\
        -reconcile-unrealized-casts \
        0_unrolled.mlir -o conv_kernel_0_llvm.mlir

mlir-translate --mlir-to-llvmir conv_kernel_0_llvm.mlir -o conv_kernel_0.ll
cd $rootfolder


########
#### generate kernel dfg
########
cd ./kernels
opt -gvn -mem2reg -memdep -memcpyopt -lcssa -loop-simplify\
         -licm -loop-deletion -indvars -simplifycfg\
         -mergereturn -indvars -instnamer\
         conv_kernel_0.ll -S -o conv_kernel_0_gvn.ll

opt  --dot-cfg conv_kernel_0_gvn.ll -S -o conv_kernel_0_cdfg.ll -enable-new-pm=0
mv ./.conv_kernel_0.dot ./conv_kernel_0_init_cdfg.dot

opt -load /home/tianyi/new_fdra/fdra/app-compiler/build/llvm-pass/libCDFGPass.so\
         "-mapping-all=true" --cdfg conv_kernel_0_gvn.ll -S -o conv_kernel_0_cdfg.ll \
         -enable-new-pm=0

cd $rootfolder

















########
#### clang compiling after simplifing
########
rootfolder=$(pwd)
filename=myconv_simplified 
func=conv_kernel
clang -I /home/tallanlong/app-compiler-decouple/app-compiler-pattern/applications/MachSuite/common\
          -D CGRA_COMPILER -target i386-unknown-linux-gnu -c -emit-llvm \
         -O2 -fno-tree-vectorize -fno-slp-vectorize -fno-unroll-loops "$filename".c -S -o "$filename".ll

opt -gvn --scalarizer -mem2reg -memdep -memcpyopt -lcssa -loop-simplify\
         -licm -loop-deletion -indvars -simplifycfg\
         -mergereturn -indvars \
         $filename.ll -S -o "$filename"_gvn.ll


opt  --dot-cfg "$filename"_gvn.ll -S -o "$filename"_cdfg.ll -enable-new-pm=0
mv ./.$func.dot ./${func}_init_cdfg.dot

opt -load /home/tianyi/new_fdra/fdra/app-compiler/build/llvm-pass/libCDFGPass.so\
         "-fn=conv_kernel" --cdfg "$filename"_gvn.ll -S -o "$filename"_cdfg.ll \
         -enable-new-pm=0


# mapping
dot -Tdot_json affine.dot -o $func.json
cgra-compiler SPDLOG_LEVEL=off \
  -c true -m true -o true -t 3600000 -i 2000 \
  -p "/home/tianyi/new_fdra/fdra/cgra-mg/src/main/resources/operations.json" \
  -a "/home/tianyi/new_fdra/fdra/cgra-mg/src/main/resources/cgra_adg.json" \
  -d "$func.json"